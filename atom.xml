<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://littlebryant.github.io/</id>
    <title>H同学</title>
    <updated>2021-12-03T09:49:26.003Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://littlebryant.github.io/"/>
    <link rel="self" href="https://littlebryant.github.io/atom.xml"/>
    <subtitle>业精于勤，荒于嬉。</subtitle>
    <logo>https://littlebryant.github.io/images/avatar.png</logo>
    <icon>https://littlebryant.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, H同学</rights>
    <entry>
        <title type="html"><![CDATA[MySQL 主从搭建(1)]]></title>
        <id>https://littlebryant.github.io/FTiiNWmGG/</id>
        <link href="https://littlebryant.github.io/FTiiNWmGG/">
        </link>
        <updated>2021-12-03T09:02:18.000Z</updated>
        <content type="html"><![CDATA[<p>😄😄<br>
1.前言 关于MySQL 主从：</p>
<p>1.1 为什么需要主从同步：</p>
<p>首先 不是所有应用都需要对数据库进行主从架构的设置，毕竟设置架构本身是 有成本的。</p>
<p>如果我们的目的在于提升数据库高并发访问的效率，那么首先需要考虑的应该是如何优化你的sql和索引，这种方式简单有效，其次是采用缓存的策略，比如使用redis。通过redis 高性能的优势将热点数据保存在内存数据库中，提升读取的效率，最后才是对数据库采用主从架构，进行读写分离。<br>
按照上面的方式进行优化，使用和维护的成本是由低到高的。</p>
<p>主从同步设计不仅能提高数据库的吞吐量：还有以下3个方面的作用：</p>
<p>(1) 读写分离，可以通过主从复制的方式来同步数据，然后通过读写分离提高数据并发处理能力。</p>
<p>简单的讲就是同一份数据被放到了多个服务器上，其中一个数据库是master主库，其余多个数据库是slave从库，当主库进行更新的时候，会自动讲数据复制到从库， 我们在客户端读取数据时，在从库中进行读取，采用读写分离的方式。</p>
<p>(2) 数据备份，通过主从复制讲主库上的数据复制到了从库上，相当于是热备份机制，也就是在主库正常运行的情况下进行的备份。不会影响到服务。</p>
<p>(3)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL 部署]]></title>
        <id>https://littlebryant.github.io/mysqlbushu/</id>
        <link href="https://littlebryant.github.io/mysqlbushu/">
        </link>
        <updated>2021-12-03T05:37:55.000Z</updated>
        <content type="html"><![CDATA[<p>😄😄<br>
一 、 <strong>安装Mysql</strong></p>
<p>1.1 MySQL 下载地址</p>
<p>https://downloads.mysql.com/archives/community/<br>
<img src="https://littlebryant.github.io//post-images/1638511556995.jpg" alt="" loading="lazy"></p>
<p>1.2 解压<br>
解压之后里面有很多的MySQL的包，主要安装四个包：</p>
<figure data-type="image" tabindex="1"><img src="https://littlebryant.github.io//post-images/1638511666127.jpg" alt="" loading="lazy"></figure>
<p>按照顺序将RPM包在Linux上进行安装：</p>
<p>注意，在Centos 7 环境上安装RPM 会报如下错误：</p>
<figure data-type="image" tabindex="2"><img src="https://littlebryant.github.io//post-images/1638511808485.jpg" alt="" loading="lazy"></figure>
<p>错误原因：Centos 7 默认不支持MySQL，内部集成了mariadb, 安装MySQL的依赖文件会和mariadb依赖文件冲突。需要先卸载掉mariadb。</p>
<p>解决：列出所有被安装的RPM package</p>
<pre><code>rpm -qa | grep mariadb 

强制卸载mariadb package：rpm -e `rpm -qa grep mariadb`
</code></pre>
<p>1.3 启动MySQL 服务</p>
<pre><code>systemctl start mysqld 
</code></pre>
<p>1.4 修改用户名和密码</p>
<p>查看初始化密码：</p>
<pre><code>grep 'temporary password' /var/log/mysqld.log
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://littlebryant.github.io//post-images/1638512236632.jpg" alt="" loading="lazy"></figure>
<p>进入MySQL：</p>
<pre><code>mysql -uroot -p
</code></pre>
<p>输入初始化密码</p>
<p>重置密码：<br>
登录成功，重置MySQL密码，执行：</p>
<pre><code>alter user user() identified by &quot;root1234&quot;;
</code></pre>
<p>这里需要注意的事密码的策略</p>
<figure data-type="image" tabindex="4"><img src="https://littlebryant.github.io//post-images/1638515496273.jpg" alt="" loading="lazy"></figure>
<p>上图修改密码异常：默认的密码策略为有大小写字母数字和符号。</p>
<pre><code>FLUSH PRIVILEGES;
</code></pre>
<p>密码修改完成后，立即生效。</p>
<p>1.4.1 设置远程连接</p>
<p>MySQL 默认是localhost 访问权限。需要添加远程连接权限。</p>
<p>切换 mysql 库</p>
<pre><code>use mysql;
</code></pre>
<p>查看用户表:</p>
<pre><code>select  User,authentication_string,Host from user;
</code></pre>
<p>如下图所示</p>
<figure data-type="image" tabindex="5"><img src="https://littlebryant.github.io//post-images/1638515798572.jpg" alt="" loading="lazy"></figure>
<p>创建root用户远程连接权限：</p>
<pre><code>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root1234';
</code></pre>
<p>MySQL 重新加载配置：</p>
<pre><code>FLUSH PRIVILEGES;
</code></pre>
<p>配置了远程访问权限的root用户如下图所示：</p>
<figure data-type="image" tabindex="6"><img src="https://littlebryant.github.io//post-images/1638515980010.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[可以，那个探索的劲儿又回来了。]]></title>
        <id>https://littlebryant.github.io/ke-yi-na-ge-xue-xi-de-jing-er-you-hui-lai-liao/</id>
        <link href="https://littlebryant.github.io/ke-yi-na-ge-xue-xi-de-jing-er-you-hui-lai-liao/">
        </link>
        <updated>2021-12-03T05:07:39.000Z</updated>
        <content type="html"><![CDATA[<p>慢慢找回那个状态，<br>
没事的，慢慢来。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://littlebryant.github.io/hello-gridea/</id>
        <link href="https://littlebryant.github.io/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>